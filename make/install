#!/bin/sh

#-------------------------------------------------------------------------------
# Copyright 2018-2019 Dominik Salvet
# SPDX-License-Identifier: MIT
# https://gitlab.com/dominiksalvet/gim
#-------------------------------------------------------------------------------
# PARAMETERS:
#   $1 - source directory path
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# SOFTWARE DEPENDENCIES
#-------------------------------------------------------------------------------

# a list of required software
readonly SW_REQUIRED='command echo [ id : mkdir cp dirname wc sed true git'

# check if any piece of software is missing
for sw in $SW_REQUIRED; do
    if ! command -v -- "$sw" > /dev/null; then
        echo "$0: missing $sw software" >&2
        exit 1
    fi
done

#-------------------------------------------------------------------------------
# CHECK ARGUMENTS
#-------------------------------------------------------------------------------

# check if the source directory argument is correct
if [ ! "$1" ] || [ ! -d "$1"/ ]; then
    echo "$0: first argument must be an existing directory's path" >&2
    exit 1
fi

#-------------------------------------------------------------------------------
# INITIALIZATION
#-------------------------------------------------------------------------------

# check installation type
if [ ! "$INSTALL_TYPE" ]; then
    if [ "$(id -u)" -eq 0 ]; then
        INSTALL_TYPE=global
    else
        INSTALL_TYPE=local
    fi
fi

# load environment variables
if [ "$INSTALL_TYPE" = global ]; then
    if [ ! -r /etc/gimrc ]; then
        cp "$1"/rc/global /etc/gimrc
    fi &&
    . /etc/gimrc
else
    if [ ! -r ~/.gimrc ]; then
        cp "$1"/rc/local ~/.gimrc
    fi &&
    . ~/.gimrc
fi || exit

# verify that required variables were loaded
: "${GIM_DB_DIR:?}"
: "${GIM_BIN_DIR:?}"

# verify that this script can access to the directories
if [ ! -w "$GIM_DB_DIR" ]; then
    echo "$0: can't write to $GIM_DB_DIR" >&2
    exit 1
fi
if [ ! -w "$GIM_BIN_DIR" ]; then
    echo "$0: can't write to $GIM_BIN_DIR" >&2
    exit 1
fi

# create additional constants
readonly GIM_STATUS_PATH="$GIM_DB_DIR"/status

#-------------------------------------------------------------------------------
# INSTALLATION
#-------------------------------------------------------------------------------

# copy program files
mkdir -p "$GIM_BIN_DIR"/ &&
cp "$1"/gim "$GIM_BIN_DIR"/ &&
{
    mkdir -p /etc/bash_completion.d/ &&
    cp "$1"/gim-completion /etc/bash_completion.d/ ||
        echo "$0: can't set up TAB completion" >&2
    true
} &&

# if INSTALLER is gim, it is possible that gim is calling this script
# if INSTALLER is not gim, insert a record of installation into gim's database manually
if [ "$INSTALLER" != gim ]; then
    # check if gim status file exists
    if [ ! -f "$GIM_STATUS_PATH" ]; then
        mkdir -p "$(dirname "$GIM_STATUS_PATH")" &&
        echo > "$GIM_STATUS_PATH"
    # check if the status file has at least one newline character
    elif [ "$(wc -l < "$GIM_STATUS_PATH")" -eq 0 ]; then
        # append a newline character
        echo >> "$GIM_STATUS_PATH"
    fi &&
    # get short hash of the current git commit
    readonly COMMIT_SHORT_HASH="$(git rev-parse --short HEAD)" &&
    # use tag name pointing to the commit as gim version if any
    commit_gim_version="$(git tag -l --points-at "$COMMIT_SHORT_HASH")" &&
    # if no tags found, use short commit hash as gim version
    commit_gim_version="${commit_gim_version:-"$commit_short_hash"}" &&
    sed -i -E -e '1i '"gitlab.com/dominiksalvet/gim $commit_gim_version" "$GIM_STATUS_PATH"
fi || exit
